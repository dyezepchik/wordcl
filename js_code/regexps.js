const regexps = [
    // stop-words
    [/[aeiouy]{6,}/, '0'],
    [/[^aeiouy']{6,}/, '0'],
    [/('s.)|('.*'.)|('$)|(^')|(^[^dljo]'[^s])/, '0'],
    [/(.)\1\1\1/, '0'],
    [/(.)\1\1(.)\2/, '0'],
    [/(.)\1(.)\2\2/, '0'],
    [/(nesse[^sn'])|(ation[^sitael'])|(tion[^saieolmn'])|(esse[^sdrnealbt'])|(bilit[^iya])|(ologi[^cseznoua])|(icall[^y])|(graph[^eiysao'])|(ograp[^h])|(satio[^n])/, '0'],

    // suffixes
    [/'s$/, ''],
    [/((s|x|z|sh|ch)es)$/, '$2'],
    [/(ies)$/, 'y'],
    [/(oes)$/, 'oe'],
    [/(ly)$/, ''],
    [/([su]s)$/, '$1s'],
    [/(s)$/, ''],
    [/(ied)$/, 'ying'],
    [/(ed)$/, 'ing'],
    [/((iz)(ability|able(ness)?|ably|ation|ed|ing))$/, 'ize'],
    [/(ier|iness|iest|ied|icat(ive|ion|or|ory|e)|iable|iability|iableness)$/, 'y'],
    [/(ing)$/, 'e'],
    [/((ful|less)(ness)?)$/, ''],
    [/(ive|ivity|iveness)$/, 'ion'],
    [/(tion)$/, 'te'],
    [/(ical(ly)?|ician)$/, 'ic'],
    [/(ism|istic)$/, 'ist'],
    [/(ous(ness)?|orship|ory)$/, 'or'],
    [/(phil(e|ea|ia|ic|e)|phob(e|ia|ic))$/, 'phil'],
    [/(cen(ce|tly))$/, 'cent'],
    [/(enc[ey])$/, 'ent'],
    [/(ogi(c|st))$/, 'ogy'],
    [/(ncy)$/, 'nce'],
    [/(ator)$/, 'ate'],
    [/(crat)$/, 'cracy'],
    [/(ulum)$/, 'ula'],
    [/(rium)$/, 'ry'],
    [/(isate)$/, 'ise'],
    [/(eae)$/, 'eor'],
    [/(aker)$/, 'ake'],
    [/(ence)$/, 'ent'],
    [/(eror)$/, 'orm'],
    [/(esi)$/, 'etic'],
    [/(try|tric)$/, 'ter'],
    [/(ine)$/, 'in'],
    [/(ly|like|ness|less|hood|lines|ment|ship|able|ible|ou|ward|wise|nou|ful|man|men|dom|ville|ish|ishly|ishness|ability)$/, ''],

    // prefixes
    [/^(sub|super|over|under|un|out|multi|semi|counter|omni|non|anti)/, ''],
    [/^((un|non|in)co)/, 'co'],
    [/^(kilo|giga|tera|milli|m[ia]cro|meso|mono|nano|ortho|poly)/, 'mega'],
    [/^(idio|leuco|leuko|lympho|megalo|melano|mero|meno|neuro|osteo|hetero|homo|myo|endo|epi|exo)/, 'homeo'],
    [/^(hyper)/, 'hypo'],
    [/^(nonpro|contra|ultra|infra)/, 'pro'],
    [/^(irr)/, 'r'],
    [/^(dis|mis|back|ir|nonir|post|pseudo|pre|(un|non|pre|nonpre)re)/, 're'],
    [/^(gravi|aero)/, 'gyro'],
    [/^(tri)/, 'bi'],
    [/^(mal)/, 'un'],
    [/^(extro)/, 'extra'],
    [/^(exp)/, 'imp'],
    [/^(ex)/, 'in'],

    // global
    [/graph/, 'log']
];

module.exports = regexps;